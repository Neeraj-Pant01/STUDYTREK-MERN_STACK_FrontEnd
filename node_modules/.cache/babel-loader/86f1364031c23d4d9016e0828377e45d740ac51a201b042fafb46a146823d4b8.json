{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from \"./userSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nconst persistConfig = {\n  key: 'studytrek',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","combineReducers","persistConfig","key","version","rootReducer","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Mern/studytrek/client/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from \"./userSlice\"\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\n\r\nconst persistConfig = {\r\n  key: 'studytrek',\r\n  version: 1,\r\n  storage,\r\n}\r\n\r\nconst rootReducer = combineReducers({user:userReducer})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store)\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AAErC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,kBAAkB;AAElD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,WAAW;EAChBC,OAAO,EAAE,CAAC;EACVJ;AACF,CAAC;AAED,MAAMK,WAAW,GAAGJ,eAAe,CAAC;EAACK,IAAI,EAACf;AAAW,CAAC,CAAC;AAEvD,MAAMgB,gBAAgB,GAAGd,cAAc,CAACS,aAAa,EAAEG,WAAW,CAAC;AAEnE,OAAO,MAAMG,KAAK,GAAGlB,cAAc,CAAC;EAClCmB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}